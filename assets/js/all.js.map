{"version":3,"sources":["all.js"],"names":["$","console","log","breakpoint","window","matchMedia","mySwiper","breakpointChecker","matches","undefined","destroy","enableSwiper","Swiper","slidesPerView","spaceBetween","addListener","swiper","grid","rows","fill","breakpoints"],"mappings":";;AAAAA,CAAC,CAAC,YAAY;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,CAFA,CAAD,C,CAKA;AACA;;AACA,CAAC,YAAY;AACX,eADW,CAEX;AACA;;AACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkB,oBAAlB,CAAnB,CAJW,CAKX;;AACA,MAAIC,QAAJ,CANW,CAOX;;AACA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAY;AACpC;AACA,QAAIJ,UAAU,CAACK,OAAX,KAAuB,IAA3B,EAAiC;AAC/B;AACA,UAAIF,QAAQ,KAAKG,SAAjB,EAA4BH,QAAQ,CAACI,OAAT,CAAiB,IAAjB,EAAuB,IAAvB,EAFG,CAG/B;;AACA,aAJ+B,CAK/B;AACD,KAND,MAMO,IAAIP,UAAU,CAACK,OAAX,KAAuB,KAA3B,EAAkC;AACvC;AACA,aAAOG,YAAY,EAAnB;AACD;AACF,GAZD;;AAaA,MAAMA,YAAY,GAAG,SAAfA,YAAe,GAAY;AAC/BL,IAAAA,QAAQ,GAAG,IAAIM,MAAJ,CAAW,gBAAX,EAA6B;AACtCC,MAAAA,aAAa,EAAE,GADuB;AAEtCC,MAAAA,YAAY,EAAE;AAFwB,KAA7B,CAAX;AAID,GALD,CArBW,CA2BX;AACA;;;AACAX,EAAAA,UAAU,CAACY,WAAX,CAAuBR,iBAAvB,EA7BW,CA8BX;;AACAA,EAAAA,iBAAiB;AAClB,CAhCD;AAgCM;;;AAGN,IAAIS,MAAM,GAAG,IAAIJ,MAAJ,CAAW,kBAAX,EAA+B;AAC1CC,EAAAA,aAAa,EAAE,CAD2B;AAE1CI,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,IAAI,EAAE;AAFF,GAFoC;AAM1CL,EAAAA,YAAY,EAAE,CAN4B;AAO1CM,EAAAA,WAAW,EAAE;AACX,SAAK;AACHP,MAAAA,aAAa,EAAE,GADZ;AAEHI,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAFH;AAKHJ,MAAAA,YAAY,EAAE;AALX,KADM;AAQX,SAAK;AACHD,MAAAA,aAAa,EAAE,CADZ;AAEHI,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAFH;AAKHJ,MAAAA,YAAY,EAAE;AALX;AARM;AAP6B,CAA/B,CAAb;AAyBA,IAAIE,MAAM,GAAG,IAAIJ,MAAJ,CAAW,eAAX,EAA4B;AACvCC,EAAAA,aAAa,EAAE,CADwB;AAEvCI,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,IAAI,EAAE;AAFF,GAFiC;AAMvCL,EAAAA,YAAY,EAAE,EANyB;AAOvCM,EAAAA,WAAW,EAAE;AACX,SAAK;AACHP,MAAAA,aAAa,EAAE,GADZ;AAEHI,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAFH;AAKHJ,MAAAA,YAAY,EAAE;AALX,KADM;AAQX,SAAK;AACHD,MAAAA,aAAa,EAAE,CADZ;AAEHI,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF,OAFH;AAKHJ,MAAAA,YAAY,EAAE;AALX;AARM;AAP0B,CAA5B,CAAb","file":"all.js","sourcesContent":["$(function () {\n  console.log('Hello Bootstrap5');\n});\n\n\n// swiper\n// swiper-course\n(function () {\n  'use strict';\n  // breakpoint where swiper will be destroyed\n  // and switches to a dual-column layout\n  const breakpoint = window.matchMedia('(max-width: 992px)');\n  // keep track of swiper instances to destroy later\n  let mySwiper;\n  //////////////////////////////////////////////////////////////////\n  const breakpointChecker = function () {\n    // if larger viewport and multi-row layout needed\n    if (breakpoint.matches === true) {\n      // clean up old instances and inline styles when available\n      if (mySwiper !== undefined) mySwiper.destroy(true, true);\n      // or/and do nothing\n      return;\n      // else if a small viewport and single column layout needed\n    } else if (breakpoint.matches === false) {\n      // fire small viewport version of swiper\n      return enableSwiper();\n    }\n  };\n  const enableSwiper = function () {\n    mySwiper = new Swiper('.swiper-course', {\n      slidesPerView: 1.5,\n      spaceBetween: 30,\n    });\n  };\n  //////////////////////////////////////////////////////////////////\n  // keep an eye on viewport size changes\n  breakpoint.addListener(breakpointChecker);\n  // kickstart\n  breakpointChecker();\n})(); /* IIFE end */\n\n\nvar swiper = new Swiper(\".swiper-customer\", {\n  slidesPerView: 1,\n  grid: {\n    rows: 3,\n    fill: 'row',\n  },\n  spaceBetween: 8,\n  breakpoints: {\n    768: {\n      slidesPerView: 2.2,\n      grid: {\n        rows: 2,\n      },\n      spaceBetween: 16,\n    },\n    992: {\n      slidesPerView: 3,\n      grid: {\n        rows: 2,\n      },\n      spaceBetween: 30\n    },\n  }\n});\n\nvar swiper = new Swiper(\".swiper-level\", {\n  slidesPerView: 1,\n  grid: {\n    rows: 3,\n    fill: 'row',\n  },\n  spaceBetween: 24,\n  breakpoints: {\n    768: {\n      slidesPerView: 2.2,\n      grid: {\n        rows: 1,\n      },\n      spaceBetween: 30,\n    },\n    992: {\n      slidesPerView: 3,\n      grid: {\n        rows: 1,\n      },\n      spaceBetween: 20\n    },\n  }\n});"]}