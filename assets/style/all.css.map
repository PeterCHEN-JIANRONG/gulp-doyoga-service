{"version":3,"sources":["config/_base.scss","utilities/_font.scss","all.css","utilities/_sizing.scss","../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss","utilities/_position.scss","utilities/_hover.scss","utilities/_img.scss","utilities/_border.scss","layout/_banner.scss","page/_index.scss"],"names":[],"mappings":"AACA,0GAAY;ACAZ;EACE,uCAAuC;ACCzC;;ACDA;EACE,WAAkB;ADIpB;;ACCA;EACE,aAAa;ADEf;;ACCA;EACE,aAAa;ADEf;;AEgDI;ED7CF;IACE,aAAa;EDCf;AACF;;AE0CI;EDtCF;IACE,aAAa;EDAf;AACF;;ACIA;EACE,YAAY;EACZ,WAAW;ADDb;;ACIA;EACE,YAAY;EACZ,WAAW;ADDb;;ACIA;EACE,YAAY;EACZ,WAAW;ADDb;;ACIA;EACE,YAAY;EACZ,WAAW;ADDb;;AEgBI;EC7DF;IACE,kBAAkB;EHiDpB;EG9CA;IACE,mDAA2C;QAA3C,+CAA2C;YAA3C,2CAA2C;EHgD7C;AACF;;AIxDA;EACE,yBAA0C;AJ2D5C;;AIxDA;EACE,yBAAqC;AJ2DvC;;AIxDA;EACE,yBAAqC;AJ2DvC;;AIvDA;EACE,8BAAsB;MAAtB,0BAAsB;UAAtB,sBAAsB;EACtB,qCAA6B;EAA7B,gCAA6B;EAA7B,6BAA6B;AJ0D/B;;AI5DA;EAKI,kCAA0B;MAA1B,8BAA0B;UAA1B,0BAA0B;AJ2D9B;;AK7EA;EACE,oBAAiB;KAAjB,iBAAiB;EACjB,0BAAuB;KAAvB,uBAAuB;ALgFzB;;AMlFA;EACE,mBAAmB;ANqFrB;;AFnFA;EACE,uCAAuC;EACvC,gBAAgB;EAChB,gBAAgB;AEsFlB;;AFnFA;EACE,eAAe;EACf,gBAAgB;AEsFlB;;AFnFA;EACE,eAAe;EACf,YAAY;EACZ,sBAAsB;AEsFxB;;AFnFA;EACE,qBAAqB;AEsFvB;;AO3GA;EAEE,iBAAiB;EACjB,uCAAuC;EACvC,sBAAsB;EACtB,6BAA6B;AP6G/B;;AEnDI;EK/DJ;IAQI,iBAAiB;EP+GnB;AACF;;AEzDI;EM/DJ;IAEI,kBAAkB;ER2HpB;AACF;;AE/DI;EM/DJ;IAMI,kBAAkB;ER6HpB;AACF","file":"all.css","sourcesContent":["// 字體roboto\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@300;400;500;700;900&display=swap');\n\nbody {\n  font-family: 'Noto Sans TC', sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n}\n\nul {\n  padding-left: 0;\n  list-style: none;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  vertical-align: middle;\n}\n\na {\n  text-decoration: none;\n}","// Noto Sans TC\n.font-noto {\n  font-family: 'Noto Sans TC', sans-serif;\n}","@import url(\"https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@300;400;500;700;900&display=swap\");\n.font-noto {\n  font-family: 'Noto Sans TC', sans-serif;\n}\n\n.w-6s {\n  width: 6rem;\n}\n\n.h-26s {\n  height: 420px;\n}\n\n.h-40s {\n  height: 628px;\n}\n\n@media (min-width: 768px) {\n  .h-md-15s {\n    height: 252px;\n  }\n}\n\n@media (min-width: 992px) {\n  .h-lg-26s {\n    height: 420px;\n  }\n}\n\n.square-3s {\n  height: 48px;\n  width: 48px;\n}\n\n.square-4s {\n  height: 60px;\n  width: 60px;\n}\n\n.square-5s {\n  height: 68px;\n  width: 68px;\n}\n\n.square-6s {\n  height: 94px;\n  width: 94px;\n}\n\n@media (min-width: 992px) {\n  .position-lg-absolute {\n    position: absolute;\n  }\n  .translate-lg-middle {\n    transform: translate(-50%, -50%) !important;\n  }\n}\n\n.hover-secondary-1:hover {\n  color: #a79697 !important;\n}\n\n.hover-dark-1:hover {\n  color: #a3a3a3 !important;\n}\n\n.hover-white-1:hover {\n  color: #cccccc !important;\n}\n\n.hover-img-extend-1 {\n  transform: scale(1, 1);\n  transition: all 0.8s ease-out;\n}\n\n.hover-img-extend-1:hover {\n  transform: scale(1.2, 1.2);\n}\n\n.img-cover {\n  object-fit: cover;\n  object-position: center;\n}\n\n.rounded-1s {\n  border-radius: 1rem;\n}\n\nbody {\n  font-family: 'Noto Sans TC', sans-serif;\n  font-weight: 400;\n  line-height: 1.5;\n}\n\nul {\n  padding-left: 0;\n  list-style: none;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  vertical-align: middle;\n}\n\na {\n  text-decoration: none;\n}\n\n.banner {\n  min-height: 560px;\n  background: url(../images/banner-1.jpg);\n  background-size: cover;\n  background-position: 50% 100%;\n}\n\n@media (min-width: 768px) {\n  .banner {\n    min-height: 582px;\n  }\n}\n\n@media (min-width: 768px) {\n  .ms-off {\n    margin-left: -60px;\n  }\n}\n\n@media (min-width: 992px) {\n  .ms-off {\n    margin-left: -95px;\n  }\n}\n","// width \n// w-6s - 96px\n.w-6s {\n  width: $spacer * 6;\n}\n\n\n// height\n.h-26s {\n  height: 420px;\n}\n\n.h-40s {\n  height: 628px;\n}\n\n// md\n@include media-breakpoint-up(md) {\n  .h-md-15s {\n    height: 252px;\n  }\n}\n\n// lg\n@include media-breakpoint-up(lg) {\n  .h-lg-26s {\n    height: 420px;\n  }\n}\n\n// square 正方形\n.square-3s {\n  height: 48px;\n  width: 48px;\n}\n\n.square-4s {\n  height: 60px;\n  width: 60px;\n}\n\n.square-5s {\n  height: 68px;\n  width: 68px;\n}\n\n.square-6s {\n  height: 94px;\n  width: 94px;\n}","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// lg\n@include media-breakpoint-up(lg) {\n  .position-lg-absolute {\n    position: absolute;\n  }\n\n  .translate-lg-middle {\n    transform: translate(-50%, -50%) !important;\n  }\n}",".hover-secondary-1:hover {\n  color: lighten($secondary, 10%) !important;\n}\n\n.hover-dark-1:hover {\n  color: lighten($dark, 20%) !important;\n}\n\n.hover-white-1:hover {\n  color: darken($white, 20%) !important;\n}\n\n// img extend\n.hover-img-extend-1 {\n  transform: scale(1, 1);\n  transition: all 0.8s ease-out;\n\n  &:hover {\n    transform: scale(1.2, 1.2);\n  }\n}",".img-cover {\n  object-fit: cover;\n  object-position: center;\n}",".rounded-1s {\n  border-radius: 1rem;\n}",".banner {\n  // min-height: calc(100vh - 83.37px);\n  min-height: 560px;\n  background: url(../images/banner-1.jpg);\n  background-size: cover;\n  background-position: 50% 100%;\n\n  @include media-breakpoint-up(md) {\n    min-height: 582px;\n  }\n}",".ms-off {\n  @include media-breakpoint-up(md) {\n    margin-left: -60px;\n  }\n\n  @include media-breakpoint-up(lg) {\n    margin-left: -95px;\n  }\n\n}"]}